#mygithub
gituser=Kirito99x
gitmail=msaifeldin46@gmail.com

token=

#Functions
# function to insert name and email of GitHub
gtc() {
    git config --global user.name "$gituser"
    git config --global user.email "$gitmail"
    echo "Git global configuration set to Name: $gituser, Email: $gitmail"
}



#clone any repo

gcl() {
    git clone https://$token@github.com/$gituser/$1.git
    cd $1
}

#git add commit push
g() {
    git pull
    git add .
    git commit -m "$@"
    git push
}

#make di and cd dir
m() {
   mkdir -v -p $1
   cd $1
}

}

#navigator
re() {
    if [ "$#" -eq 1 ]; then
        # Use the provided path number as an argument and change directory
        eval "$(dir_navigator.sh "$1")"
    else
        while true; do
            # Display directory history
            dir_navigator.sh

            # Prompt the user
            echo "Enter a number to change directory, 'c' to clear history, 'd' to delete, or 'q' to quit."
            read choice

            if [ "$choice" == "q" ]; then
                break
            elif [ "$choice" == "c" ]; then
                echo "" > ~/.dir_history
            elif [ "$choice" == "d" ]; then
                # Request user input for paths to delete
                echo "Enter the numbers of paths to delete (separated by space), or 'q' to quit:"
                read delete_choices

                if [ "$delete_choices" == "q" ]; then
                    break
                else
                    # Reverse ~/.dir_history in a temp file
                    tac "$DIR_HISTORY_FILE" > "$DIR_HISTORY_FILE.tmp"

                    # Delete the selected lines
                    IFS=" " read -ra delete_numbers <<< "$delete_choices"
                    delete_numbers=($(echo "${delete_numbers[@]}" | tr ' ' '\n' | sort -nr))
                    for num in "${delete_numbers[@]}"; do
                        sed -i "${num}d" "$DIR_HISTORY_FILE.tmp"
                    done

                    # Reverse the temp file again before updating ~/.dir_history
                    tac "$DIR_HISTORY_FILE.tmp" > "$DIR_HISTORY_FILE"

                    # Remove the temporary file
                    rm "$DIR_HISTORY_FILE.tmp"
                fi
            else
                # Use the choice as an argument and change directory
                eval "$(dir_navigator.sh "$choice")"
                break
            fi
        done
    fi
}


cleanup_dir_history() {
    wait

    # Read the file from the end, remove duplicates, and update the history file
    tac "$DIR_HISTORY_FILE" | awk '!seen[$0]++' | tac > "$DIR_HISTORY_FILE.tmp"
    mv "$DIR_HISTORY_FILE.tmp" "$DIR_HISTORY_FILE"
}

export DIR_HISTORY_FILE="$HOME/.dir_history"

# Append the new directory to the history file whenever 'cd' is used
cd() {
   builtin cd "$@" && echo "$PWD" >> "$DIR_HISTORY_FILE"
}